<#@ template language="C#" hostspecific="true" #>
<#@ code file="../90 BIML Templates/BIMLExtensions.cs"#>

<#
string StageConnectionName = "EDW_Stage";
string EDWConnectionName = "EDW";
string UtilityConnectionName = "EDW_Utility";
string ConnectionString_EDW_Utility_ADO = @"Server=.;Initial Catalog=EDW_Utility;Integrated Security=SSPI;";
string ConnectionString_EDW_Utility = @"Data Source=.;Initial Catalog=EDW_Utility;Provider=SQLNCLI11.1;Integrated Security=SSPI;Auto Translate=False;";

#>

<#@ import namespace="System.Data" #>
<#@ import namespace="System.Data.SqlClient" #>
<Biml xmlns="http://schemas.varigence.com/biml.xsd">
    <Connections>
        <# /* Renders all connections */
            DataTable dtConnections = BIMLExtensions.GetDataTableFromSQL("exec BIML.GetConnections;", ConnectionString_EDW_Utility_ADO);
            
            foreach(DataRow connection in dtConnections.Rows)
            {
                #>
                    <OleDbConnection Name="<#=connection["Name"].ToString().Trim()#>" ConnectionString="<#=connection["ConnectionString"].ToString().Trim()#>" CreateInProject="<#=connection["InCludeInProject"].ToString().ToLower().Trim()#>"/>
                <#
            }
        #>
    </Connections>
    <Packages>
        <#
            DataTable dtEDWTables = new DataTable();
            SqlDataAdapter daEDWTableConnection = new SqlDataAdapter("exec BIML.GetEDWTables;", ConnectionString_EDW_Utility_ADO);
            daEDWTableConnection.Fill(dtEDWTables);
            
            foreach(DataRow dimension in dtEDWTables.Rows)
            { 
                string DestinationConnectionName = EDWConnectionName;
                string DestinationConnectionADO = BIMLExtensions.GetMetaDataConnectionString(DestinationConnectionName, ConnectionString_EDW_Utility_ADO);
                
                bool TableExist = BIMLExtensions.TableExist(DestinationConnectionADO,dimension["DestinationSchemaUnsafe"].ToString().Trim(),dimension["DestinationTableNameUnsafe"].ToString().Trim());
                bool AllowTableRecreation = Convert.ToBoolean(dimension["AllowTableRecreation"]);
                string CreateTableSQL = BIMLExtensions.GetEDWTableCreateScript(dimension, BIMLExtensions.GetMetaDataConnectionString(StageConnectionName, ConnectionString_EDW_Utility_ADO), ConnectionString_EDW_Utility_ADO);

                if(!TableExist)
                {
                    BIMLExtensions.ExecuteSQL(CreateTableSQL, DestinationConnectionADO);
                }
                else if(TableExist && AllowTableRecreation)
                {
                    string DropTableSQL = "DROP TABLE " + dimension["DestinationSchema"].ToString().Trim() + "." + dimension["DestinationTableName"].ToString().Trim() + ";";
                    DropTableSQL = DropTableSQL + Environment.NewLine + CreateTableSQL;
                    BIMLExtensions.ExecuteSQL(DropTableSQL, DestinationConnectionADO);
                }
            #>
        <Package Name="<#=dimension["Name"].ToString().Trim()#>"  ProtectionLevel="DontSaveSensitive" ConstraintMode="Linear">
            <Connections>
                <#
                foreach(DataRow connection in dtConnections.Rows)
                {
                    if(connection["IncludeInProject"].ToString().Trim() == "True")
                    {
                    #>
                        <Connection ConnectionName="<#=connection["Name"].ToString().Trim()#>" >
                            <Expressions>
                                <Expression ExternalProperty="ConnectionString"><#=connection["Expression"].ToString().Trim()#></Expression>
                            </Expressions>
                        </Connection>
                    <#
                    }
                }#>
            </Connections>

            <Variables>
				<Variable Name="DestinationTableName" DataType="String"><#=dimension["DestinationTableNameUnsafe"].ToString().Trim()#></Variable>
				<Variable Name="DestinationTableSchema" DataType="String"><#=dimension["DestinationSchemaUnsafe"].ToString().Trim()#></Variable>
				<Variable Name="LogDetailID" DataType="Int32" IncludeInDebugDump="Include">0</Variable>
				<Variable Name="LogID" DataType="Int32" IncludeInDebugDump="Include">0</Variable>
				<Variable Name="RowCountAfter" DataType="Int32" IncludeInDebugDump="Include">0</Variable>
				<Variable Name="RowCountBefore" DataType="Int32" IncludeInDebugDump="Include">0</Variable>
				<Variable Name="RowCountFetch" DataType="Int32" IncludeInDebugDump="Include">0</Variable>
				<Variable Name="RowCountInsert" DataType="Int32" IncludeInDebugDump="Include">0</Variable>

				<# /* Include template specific variables */ #>
			    <#=CallBimlScript(dimension["TemplateVariablesFileName"].ToString().Trim(), DestinationConnectionName, UtilityConnectionName, dimension, ConnectionString_EDW_Utility_ADO)#>
            </Variables>
            <Parameters>
                <Parameter Name="LogDetailID" DataType="Int32" IsRequired="false" IsSensitive="false">0</Parameter>
            </Parameters>

            <Tasks>
                <#@ include file="../90 BIML Templates/Snippet_LogDetailStart.biml" #>

                <# /* Row Count before include */#>
                <#=CallBimlScript("../90 BIML Templates/Snippet_RowCountBefore.biml", DestinationConnectionName)#>

                <# /* Include relevant tempalte */ #>
                <#=CallBimlScript(dimension["TemplateNameFileName"].ToString().Trim(), DestinationConnectionName, UtilityConnectionName, StageConnectionName, dimension, ConnectionString_EDW_Utility_ADO)#>    

                <# /* Row Count after include */#>
                <#=CallBimlScript("../90 BIML Templates/Snippet_RowCountAfter.biml", DestinationConnectionName)#>

                <#@ include file="../90 BIML Templates/Snippet_LogDetailEnd.biml" #>
            </Tasks>
        </Package>
        <#}
        #>
            
    </Packages>
    <Projects>
        <PackageProject Name="30 EDW" ProtectionLevel="DontSaveSensitive">
			<Annotations>
			    <!-- To do Edit this one ! -->
				<Annotation Tag="ProjectParametersPath">C:\Users\js\Dropbox\Kode - inspari\Inspari BIML Toolkit\30 EDW\Project.params</Annotation>
			</Annotations>

            <Packages>
                <#
                foreach(DataRow dimension in dtEDWTables.Rows)
                {#>
                    <Package PackageName="<#=dimension["PackageName"].ToString().Trim()#>"/>
                <#}
                #>
            </Packages>
            <Parameters>
                <#
                foreach(DataRow connection in dtConnections.Rows)
                {
                    #>
                    <Parameter Name="ConnectionString_<#=connection["Name"].ToString().Trim()#>" DataType="String" IsRequired="true"><#=connection["ConnectionString"].ToString().Trim()#></Parameter>
                    <#
                }#>
                <Parameter Name="MasterExecutionNoOfThreads" DataType="Int32" IsRequired="true">1</Parameter>
                <Parameter Name="FolderNameSSISDB" DataType="String" IsRequired="true">BI</Parameter><!--To do Dynamic-->
                <Parameter Name="FullLoad" DataType="Boolean" IsRequired="true">1</Parameter>
            </Parameters>
        </PackageProject>
    </Projects>

</Biml>