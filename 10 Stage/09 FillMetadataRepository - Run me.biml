<#@ template language="C#" hostspecific="true" #>
<#@ code file="../90 BIML Templates/BIMLExtensions.cs"#>
<#@ import namespace="System.Data" #>
<#@ import namespace="System.Data.SqlClient" #>
<#@ import namespace="Varigence.Utility.Logging" #>

<#@ include file="08 UtilityConnectionDefinition.biml" #>
 

 
<Biml xmlns="http://schemas.varigence.com/biml.xsd">
    <Connections>
        <# /* Renders all connections */
            DataTable dtConnections = BIMLExtensions.GetDataTableFromSQL("exec BIML.GetConnections;", ConnectionString_EDW_Utility_ADO);
           
            foreach(DataRow connection in dtConnections.Rows)
            {
            if (connection["ConnectionType"].ToString().ToLower().Trim() == "oledb") //ToLower()
            { 
                #>
                    <OleDbConnection Name="<#=connection["Name"].ToString().Trim()#>" ConnectionString="<#=connection["ConnectionString"].ToString().Trim()#>" CreateInProject="<#=connection["InCludeInProject"].ToString().ToLower().Trim()#>"/>
                <#
            }
            else if (connection["ConnectionType"].ToString().ToLower().Trim() == "odbc") //ToLower()
            { 
                #>
                    <OdbcConnection Name="<#=connection["Name"].ToString().Trim()#>" ConnectionString="<#=connection["ConnectionString"].ToString().Trim()#>" CreateInProject="<#=connection["InCludeInProject"].ToString().ToLower().Trim()#>"/>
                <#
            }
            else if (connection["ConnectionType"].ToString().ToLower().Trim() == "adonet")
            {
                #>
                     <AdoNetConnection Name="<#=connection["Name"].ToString().Trim()#>" ConnectionString="<#=connection["ConnectionString"].ToString().Trim()#>" CreateInProject="<#=connection["InCludeInProject"].ToString().ToLower().Trim()#>" Provider="<#=connection["ADONETProvider"].ToString()#>" />
                <#
                
            }
            }
        #>
    </Connections>
    <Packages>
        <#
            DataTable dtConnections2 = BIMLExtensions.GetDataTableFromSQL("exec BIML.GetConnections;", ConnectionString_EDW_Utility_ADO);
            
            foreach(DataRow sourceData in dtConnections2.Rows)
            {  
            if (sourceData["MetadataQuery"].ToString().Length == 0)
            { //DoNothing
            }
            else
            {
               

                
            #>
                <Package Name="FillMetadataRepository - <#=sourceData["Name"].ToString().Trim()#>" ConstraintMode="Linear">
                    <Connections>
                        <#
                        foreach(DataRow connection in dtConnections.Rows)
                        { 
                            if(connection["IncludeInProject"].ToString().Trim() == "True" || connection["Name"].ToString().Trim() == sourceData["Name"].ToString().Trim())
                            {
                            #> 
                                <Connection ConnectionName="<#=connection["Name"].ToString().Trim()#>" >
                                    <Expressions>
                                        <Expression ExternalProperty="ConnectionString"><#=connection["Expression"].ToString().Trim()#></Expression>
                                    </Expressions>
                                </Connection>
                            <# 
                            }
                        }#>
                    </Connections>
                    <Variables>
        				<Variable Name="DestinationTableName" DataType="String">StageMetadata</Variable>
        				<Variable Name="DestinationTableSchema" DataType="String">BIML</Variable>
        				<Variable Name="LogDetailID" DataType="Int32" IncludeInDebugDump="Include">0</Variable>
        				<Variable Name="LogID" DataType="Int32" IncludeInDebugDump="Include">0</Variable>
        				<Variable Name="RowCountAfter" DataType="Int32" IncludeInDebugDump="Include">0</Variable>
        				<Variable Name="RowCountBefore" DataType="Int32" IncludeInDebugDump="Include">0</Variable>
        				<Variable Name="RowCountFetch" DataType="Int32" IncludeInDebugDump="Include">0</Variable>
        				<Variable Name="RowCountInsert" DataType="Int32" IncludeInDebugDump="Include">0</Variable>
  		                <Variable Name="SourceConnectionString" DataType="String"><#=sourceData["ConnectionString"].ToString().Trim()#></Variable>
                    </Variables>
                    <Parameters>
                        <Parameter Name="LogDetailID" DataType="Int32" IsRequired="false" IsSensitive="false">0</Parameter>
                    </Parameters>
                    <Tasks>
                        <# /* Log detail start include */#>
                  

                        <# /* Row Count before include */#>
                     
                       
                        <#   /* Include relevant tempalte */ #>
                      <!-- 1-1 Stage template begin -->
<Container ConstraintMode="Linear" Name="Staging">
    <Tasks>
        <# /* Truncate table before */#> 
      
       <#=CallBimlScript("../90 BIML Templates/Snippet_TruncateTable.biml", UtilityConnectionName)#>
       
      
        <Dataflow Name="Get Metadata">
            <Transformations>
             
                                <# if (sourceData["ConnectionType"].ToString().ToLower().Trim() == "adonet")
                {
                   //string SourceSelect = BIMLExtensions.GetStageSourceSelectScript2(stageTable, BIMLExtensions.GetMetaDataConnectionString(stageTable["SourceConnectionNameUnsafe"].ToString().Trim(), ConnectionString_EDW_Utility_ADO), ConnectionString_EDW_Utility_ADO);
                #> 
                                <AdoNetSource Name="<#=sourceData["Name"].ToString()#>" ConnectionName="<#=sourceData["Name"].ToString()#>">
              <DirectInput><![CDATA[<#=sourceData["MetadataQuery"].ToString()#>]]></DirectInput>
              
             
            </AdoNetSource>
                <#
                }
                
                
                                                else if (sourceData["ConnectionType"].ToString().ToLower().Trim() == "odbc")
                {
                   //string SourceSelect = BIMLExtensions.GetStageSourceSelectScript2(stageTable, BIMLExtensions.GetMetaDataConnectionString(stageTable["SourceConnectionNameUnsafe"].ToString().Trim(), ConnectionString_EDW_Utility_ADO), ConnectionString_EDW_Utility_ADO);
                #> 
                                <OdbcSource Name="<#=sourceData["Name"].ToString()#>" Connection="<#=sourceData["Name"].ToString()#>">
              <DirectInput><![CDATA[<#=sourceData["MetadataQuery"].ToString()#>]]></DirectInput>
              
             
            </OdbcSource>
                <#
                }
                
                
                else {
                    #> 
                    <# 

#>           
                <OleDbSource Name="<#=sourceData["Name"].ToString()#>" ConnectionName="<#=sourceData["Name"].ToString()#>" DefaultCodePage="1252" AlwaysUseDefaultCodePage="true">
                    <DirectInput><![CDATA[<#=sourceData["MetadataQuery"].ToString()#>]]></DirectInput>
                </OleDbSource>
                 <#
                }
                #>
                  <DerivedColumns Name="Insert Connection">
              <Columns>
                <Column ReplaceExisting="false" Name="ConnectionId" DataType="Int32">
                 <![CDATA[<#=sourceData["Id"].ToString()#>]]>
                </Column>
              </Columns>
            </DerivedColumns>
				<#@ include file="../90 BIML Templates/Snippet_RowCountFetch.biml" #>
				<#@ include file="../90 BIML Templates/Snippet_RowCountInsert.biml" #>
                <OleDbDestination Name="Stage" ConnectionName="EDW_Utility" KeepIdentity="false" KeepNulls="false" UseFastLoadIfAvailable="true">
                    <ExternalTableOutput Table="[BIML].[StageMetadata]" />
                </OleDbDestination>
            </Transformations>
        </Dataflow>
            <ExecuteSQL Name="Merge Table Metadata" ForcedExecutionValueDataType="Empty" ConnectionName="EDW_Utility">
<DirectInput>BEGIN TRAN;
MERGE [BIML].[StageTable] AS T
USING (SELECT DISTINCT ConnectionId, [TableSchema],[TableName]
    
  FROM [BIML].[StageMetadata]) AS S
ON (T.ConnectionId = S.ConnectionId AND T.SourceTableName = S.TableName AND T.SourceSchema = S.TableSchema) 
WHEN NOT MATCHED BY TARGET --AND S.EmployeeName LIKE 'S%' 
    THEN 
  INSERT(SourceTableName, SourceSchema, DestinationTableName, ConnectionId, Generate, AllowTableRecreation, TemplateId, IncludePrimaryKey, TrimChars, EnableHistory, ExistsAtSource) 
  VALUES(TableName, TableSchema, TableName, ConnectionId, 0, 0, null, 0, 0, null, 1)
WHEN MATCHED 
    THEN UPDATE SET T.[ExistsAtSource] = 1
WHEN NOT MATCHED BY SOURCE AND T.ConnectionId =   <#=sourceData["Id"].ToString()#>
    THEN UPDATE SET T.[ExistsAtSource] = 0 
OUTPUT $action, inserted.*, deleted.*;
COMMIT TRAN;
GO</DirectInput>
</ExecuteSQL>
         
         <ExecuteSQL Name="Merge Column Metadata" ForcedExecutionValueDataType="Empty" ConnectionName="EDW_Utility">
<DirectInput>BEGIN TRAN;
MERGE [BIML].[StageColumn] AS T
USING (  SELECT [ColumnName],[OrdinalPosition],IsNullable, [CharacterMaximumLength],[DataType],[NumericPrecision],[NumericScale],[Datetime],[TableType],[PrimaryKey],b.Id AS StageTableId 
   FROM [BIML].[StageMetadata] as a
   INNER JOIN [BIML].[StageTable] as b ON b.SourceTableName = a.TableName AND b.SourceSchema = a.TableSchema
  ) AS S
ON (T.StageTableId = S.StageTableId AND T.SourceColumnName = S.ColumnName) 
WHEN NOT MATCHED BY TARGET 
    THEN 
  INSERT([StageTableId]
      ,[SourceColumnName]
      ,[SourceOrdinalPosition]
      ,[SourceIsNullable]
      ,[SourceCharacterMaximumLength]
      ,[SourceDataType]
      ,[SourceNumericPrecision]
      ,[SourceNumericScale]
      ,[SourceDatetime]
      ,[SourceTableType]
      ,[SourcePrimaryKey]
   ,[ExistsAtSource]
   ,[Enabled]) 
  VALUES(
    StageTableId
    ,[ColumnName]
    ,[OrdinalPosition]
    ,[IsNullable]
    ,[CharacterMaximumLength]
    ,[DataType]
    ,[NumericPrecision]
    ,[NumericScale]
    ,[Datetime]
    ,[TableType]
    ,[PrimaryKey]
    , 1
    , 1)
WHEN MATCHED 
    THEN UPDATE SET 
		T.[ExistsAtSource] = 1
		,T.[SourceOrdinalPosition] = [OrdinalPosition]
      ,T.[SourceIsNullable] = [IsNullable]
      ,T.[SourceCharacterMaximumLength] = [CharacterMaximumLength]
      ,T.[SourceDataType] = [DataType]
      ,[SourceNumericPrecision] = [NumericPrecision]
      ,[SourceNumericScale] = [NumericScale]
      ,[SourceDatetime] = [Datetime]
      ,[SourceTableType] = [TableType]
      ,[SourcePrimaryKey] = [PrimaryKey]
   
  
WHEN NOT MATCHED BY SOURCE AND T.StageTableId IN (SELECT Id FROM BIML.StageTable WHERE ConnectionId = <#=sourceData["Id"].ToString()#>) -- Only check for deletes for the specific connection.
    THEN UPDATE SET T.[ExistsAtSource] = 0 
OUTPUT $action, inserted.*, deleted.*;
COMMIT TRAN;
GO
</DirectInput>
</ExecuteSQL>   
            
    </Tasks>
    
</Container>
 
                        
                        <#  /* Row Count after include */#>
                     

                        <# /* Log detail end include */#>
                     
                    </Tasks>
                </Package>
            <#}
            }
        #>
    </Packages>
    <Projects>
        <PackageProject Name="10 Stage" ProtectionLevel="DontSaveSensitive">
			<Annotations>
				<Annotation Tag="ProjectParametersPath"></Annotation>
			</Annotations>
            <Packages>
                <#
                foreach(DataRow connection in dtConnections2.Rows)
                {
                
                   if (connection["MetadataQuery"].ToString().Length == 0)
            { //DoNothing
            }
            else
            {#>
                    <Package PackageName="FillMetadataRepository - <#=connection["Name"].ToString().Trim()#>"/>
                <#}}
                #> 
            </Packages>
            <Parameters>
                <#
                foreach(DataRow connection in dtConnections.Rows)
                {
                 if(connection["IncludeInProject"].ToString().Trim() == "True")
                    {
                        #>
                        <Parameter Name="ConnectionString_<#=connection["Name"].ToString().Trim()#>" DataType="String" IsRequired="true"><#=connection["ConnectionString"].ToString().Trim()#></Parameter>
                        <#
                    }
                    
                }#>
                <Parameter Name="MasterExecutionNoOfThreads" DataType="Int32" IsRequired="true">1</Parameter>
                <Parameter Name="FolderNameSSISDB" DataType="String" IsRequired="true">BI</Parameter><!--To do Dynamic-->
                <Parameter Name="FullLoad" DataType="Boolean" IsRequired="true">1</Parameter>
            </Parameters>
        </PackageProject>
    </Projects>
</Biml>
