<#@ template tier="1000" #>
<#@ import namespace="System.IO" #>
<#@ import namespace="System.Text" #>
<#@ import namespace="Varigence.Flow.FlowFramework.Validation" #>

<# 
	var project = RootNode.PackageProjects.FirstOrDefault();
	if (project == null) {
		ValidationReporter.Report(Severity.Error, "<PackageProject> does not exist");
	} else {
		var projectPath = project.GetTag("ProjectParametersPath");
		if (projectPath == "") {
			ValidationReporter.Report(project, Severity.Error, "Annotation ProjectParametersPath does not exist", @"Add <Annotation Tag=""ProjectParametersPath"">C:\SSIS\TestProject\Project.params</Annotation> to <PackageProject>");
        } else {
			
			try {
				
				var fileAttributes = File.GetAttributes(projectPath);
				if ((fileAttributes & FileAttributes.ReadOnly) == FileAttributes.ReadOnly) {
					File.SetAttributes(projectPath, (fileAttributes & ~FileAttributes.ReadOnly));
				}
				
				StringBuilder parameters = new StringBuilder();
				parameters.AppendLine("<?xml version=\"1.0\"?>");
				parameters.AppendLine("<SSIS:Parameters xmlns:SSIS=\"www.microsoft.com/SqlServer/SSIS\">");
				foreach (var parameter in project.Parameters) {
					parameters.AppendFormat("<SSIS:Parameter SSIS:Name=\"{0}\">", parameter.Name).AppendLine();
					parameters.AppendLine("<SSIS:Properties>");
					parameters.AppendFormat("<SSIS:Property SSIS:Name=\"ID\">{{{0}}}</SSIS:Property>", (parameter.Id == Guid.Empty ?  Guid.NewGuid() : parameter.Id)).AppendLine();
					parameters.AppendFormat("<SSIS:Property SSIS:Name=\"DataType\">{0}</SSIS:Property>", Convert.ToByte(parameter.DataType)).AppendLine();
					parameters.AppendFormat("<SSIS:Property SSIS:Name=\"Value\">{0}</SSIS:Property>", parameter.Value).AppendLine();
					parameters.AppendFormat("<SSIS:Property SSIS:Name=\"Sensitive\">{0}</SSIS:Property>", Convert.ToByte(parameter.IsSensitive)).AppendLine();
					parameters.AppendFormat("<SSIS:Property SSIS:Name=\"Required\">{0}</SSIS:Property>", Convert.ToByte(parameter.IsRequired)).AppendLine();
					parameters.AppendFormat("<SSIS:Property SSIS:Name=\"IncludeInDebugDump\">{0}</SSIS:Property>", Convert.ToByte(parameter.IncludeInDebugDump)).AppendLine();
					parameters.AppendFormat("<SSIS:Property SSIS:Name=\"Description\">{0}</SSIS:Property>", parameter.GetTag("Description")).AppendLine();
					parameters.AppendFormat("<SSIS:Property SSIS:Name=\"CreationName\">{0}</SSIS:Property>", parameter.GetTag("CreationName")).AppendLine();
					parameters.AppendLine("</SSIS:Properties>");
					parameters.AppendLine("</SSIS:Parameter>");
				}
				parameters.AppendLine("</SSIS:Parameters>");
				
				File.WriteAllText(projectPath, parameters.ToString());
				
			} catch (Exception e) {
				ValidationReporter.Report(project, Severity.Error, "Error writing Project Parameters to Project.params", String.Format("Make sure the path \"{0}\" is correct and that this project uses the Project Deployment Model", projectPath));
			}
			
        }
	}
#>